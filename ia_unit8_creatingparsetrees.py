# -*- coding: utf-8 -*-
"""IA_unit8_CreatingParseTrees.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Bn6LC9vtkk-lyAynBhmDKUkaEhKS3oH9
"""

# For spaCy
!pip install spacy
!python -m spacy download en_core_web_sm

# For NLTK
!pip install nltk

# import library

import spacy
import nltk
from nltk import pos_tag
from nltk import RegexpParser
from nltk.tokenize import word_tokenize
nltk.download('punkt')
nltk.download('averaged_perceptron_tagger')

# Process the Sentences and Extract POS Tags


nlp = spacy.load("en_core_web_sm")

def get_pos_tags_spaCy(sentence):
    doc = nlp(sentence)
    return [(token.text, token.pos_) for token in doc]

def get_pos_tags_NLTK(sentence):
    words = word_tokenize(sentence)
    pos_tags = pos_tag(words)
    return pos_tags

# Define Grammar and Parse Sentences

def parse_sentence_spaCy(sentence):
    doc = nlp(sentence)
    return [token.text for token in doc]


def parse_sentence_NLTK(sentence):
    words = word_tokenize(sentence)
    pos_tags = pos_tag(words)

    grammar = r"""
        NP: {<DT|JJ|NN.*>+} # Chunk sequences of DT, JJ, NN
        PP: {<IN><NP>} # Chunk prepositions followed by NP
        VP: {<VB.*><NP|PP>*} # Chunk verbs and their arguments
    """
    cp = RegexpParser(grammar)
    tree = cp.parse(pos_tags)

    return tree

# Display the Parse Trees

def display_parse_tree_spaCy(sentence):
    doc = nlp(sentence)
    for token in doc:
        print(f"{token.text}: {token.pos_}")


def display_parse_tree_NLTK(sentence):
    tree = parse_sentence_NLTK(sentence)
    tree.pretty_print()

# The government raised interest rates.

sen1 = "The government raised interest rates."

print("Parse Tree 1:")
display_parse_tree_spaCy(sen1)

# The internet gives everyone a voice.

sent2 = "The internet gives everyone a voice."

print("\nParse Tree 2:")
display_parse_tree_spaCy(sent2)

# The internet gives everyone a voice.

sent3 = "The man saw the dog with the telescope."

print("\nParse Tree 3:")
display_parse_tree_spaCy(sent3)